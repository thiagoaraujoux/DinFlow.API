{
  "openapi": "3.0.1",
  "info": {
    "title": "DinFlow - API",
    "description": "API com metodos para aplicação de controle financeiro",
    "contact": {
      "name": "API DINFLOW",
      "url": "https://www.unitins.br/nPortal/",
      "email": "thiagoaraujo.unitins"
    }
  },
  "paths": {
    "/api/categorias": {
      "get": {
        "tags": [
          "Categorias"
        ],
        "summary": "Retorna as categorias cadastradas.",
        "responses": {
          "200": {
            "description": "Categoria encontrada."
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        }
      },
      "post": {
        "tags": [
          "Categorias"
        ],
        "summary": "Cadastra uma nova categoria.",
        "requestBody": {
          "description": "Dados da categoria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Categoria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Categoria"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Categoria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "A categoria foi criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos foram enviados na requisição."
          },
          "409": {
            "description": "Já existe uma categoria com o mesmo nome."
          }
        }
      }
    },
    "/api/categorias/{id}": {
      "get": {
        "tags": [
          "Categorias"
        ],
        "summary": "Retorna os detalhes de uma categoria específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da categoria.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoria encontrada."
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        }
      },
      "put": {
        "tags": [
          "Categorias"
        ],
        "summary": "Atualiza uma categoria existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da categoria a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto com os dados atualizados da categoria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Categoria"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Categoria"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Categoria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A categoria foi atualizada com sucesso."
          },
          "404": {
            "description": "Nenhuma categoria encontrada com o ID especificado."
          }
        }
      },
      "delete": {
        "tags": [
          "Categorias"
        ],
        "summary": "Exclui uma categoria específica pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da categoria a ser excluída.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A categoria foi marcada como excluída com sucesso."
          },
          "404": {
            "description": "Nenhuma categoria encontrada com o ID especificado."
          }
        }
      }
    },
    "/api/Despesas": {
      "get": {
        "tags": [
          "Despesas"
        ],
        "summary": "Retorna as categorias cadastradas.",
        "responses": {
          "200": {
            "description": "Categoria encontrada."
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        }
      },
      "post": {
        "tags": [
          "Despesas"
        ],
        "summary": "Cadastra uma nova categoria.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Despesa"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Despesa"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Despesa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "A categoria foi criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos foram enviados na requisição."
          },
          "409": {
            "description": "Já existe uma categoria com o mesmo nome."
          }
        }
      }
    },
    "/api/Despesas/{id}": {
      "get": {
        "tags": [
          "Despesas"
        ],
        "summary": "Retorna os detalhes de uma categoria específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da categoria.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoria encontrada."
          },
          "404": {
            "description": "Categoria não encontrada."
          }
        }
      },
      "put": {
        "tags": [
          "Despesas"
        ],
        "summary": "Atualiza uma categoria existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da categoria a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto com os dados atualizados da categoria.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Despesa"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Despesa"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Despesa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A categoria foi atualizada com sucesso."
          },
          "404": {
            "description": "Nenhuma categoria encontrada com o ID especificado."
          }
        }
      },
      "delete": {
        "tags": [
          "Despesas"
        ],
        "summary": "Exclui uma categoria específica pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da categoria a ser excluída.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A categoria foi marcada como excluída com sucesso."
          },
          "404": {
            "description": "Nenhuma categoria encontrada com o ID especificado."
          }
        }
      }
    },
    "/api/economias": {
      "get": {
        "tags": [
          "Economias"
        ],
        "summary": "Retorna as Economias cadastradas.",
        "responses": {
          "200": {
            "description": "Economia encontrada."
          },
          "404": {
            "description": "Economia não encontrada."
          }
        }
      },
      "post": {
        "tags": [
          "Economias"
        ],
        "summary": "Cadastra uma nova economia.",
        "requestBody": {
          "description": "Dados da economia.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Economia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Economia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Economia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "A economia foi criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos foram enviados na requisição."
          },
          "409": {
            "description": "Já existe uma economia com o mesmo nome."
          }
        }
      }
    },
    "/api/economias/{id}": {
      "get": {
        "tags": [
          "Economias"
        ],
        "summary": "Retorna os detalhes de uma Economias específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Economias.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Economia encontrada."
          },
          "404": {
            "description": "Economia não encontrada."
          }
        }
      },
      "put": {
        "tags": [
          "Economias"
        ],
        "summary": "Atualiza uma economia existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da economia a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto com os dados atualizados da economia.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Economia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Economia"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Economia"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A economia foi atualizada com sucesso."
          },
          "404": {
            "description": "Nenhuma economia encontrada com o ID especificado."
          }
        }
      },
      "delete": {
        "tags": [
          "Economias"
        ],
        "summary": "Exclui uma economia específica pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da economia a ser excluída.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A economia foi marcada como excluída com sucesso."
          },
          "404": {
            "description": "Nenhuma economia encontrada com o ID especificado."
          }
        }
      }
    },
    "/api/receitas": {
      "get": {
        "tags": [
          "Receitas"
        ],
        "summary": "Retorna as receitas cadastradas.",
        "responses": {
          "200": {
            "description": "Receita encontrada."
          },
          "404": {
            "description": "Receita não encontrada."
          }
        }
      },
      "post": {
        "tags": [
          "Receitas"
        ],
        "summary": "Cadastra uma nova receita.",
        "requestBody": {
          "description": "Dados da receita.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Receita"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Receita"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Receita"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "A receita foi criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos foram enviados na requisição."
          },
          "409": {
            "description": "Já existe uma receita com o mesmo nome."
          }
        }
      }
    },
    "/api/receitas/{id}": {
      "get": {
        "tags": [
          "Receitas"
        ],
        "summary": "Retorna os detalhes de uma receita específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da receita.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Receita encontrada."
          },
          "404": {
            "description": "Receita não encontrada."
          }
        }
      },
      "put": {
        "tags": [
          "Receitas"
        ],
        "summary": "Atualiza uma receita existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da receita a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto com os dados atualizados da receita.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Receita"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Receita"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Receita"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A receita foi atualizada com sucesso."
          },
          "404": {
            "description": "Nenhuma receita encontrada com o ID especificado."
          }
        }
      },
      "delete": {
        "tags": [
          "Receitas"
        ],
        "summary": "Exclui uma receita específica pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da receita a ser excluída.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A receita foi marcada como excluída com sucesso."
          },
          "404": {
            "description": "Nenhuma receita encontrada com o ID especificado."
          }
        }
      }
    },
    "/api/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Retorna as despesas cadastradas.",
        "responses": {
          "200": {
            "description": "despesa encontrada."
          },
          "404": {
            "description": "despesa não encontrada."
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Cadastra uma nova despesa.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "A despesa foi criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos foram enviados na requisição."
          },
          "409": {
            "description": "Já existe uma despesa com o mesmo nome."
          }
        }
      }
    },
    "/api/tags/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Retorna os detalhes de uma despesa específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da despesa.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "despesa encontrada."
          },
          "404": {
            "description": "despesa não encontrada."
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Atualiza uma despesa existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da despesa a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto com os dados atualizados da despesa.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A despesa foi atualizada com sucesso."
          },
          "404": {
            "description": "Nenhuma despesa encontrada com o ID especificado."
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Exclui uma despesa específica pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da despesa a ser excluída.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "A despesa foi marcada como excluída com sucesso."
          },
          "404": {
            "description": "Nenhuma despesa encontrada com o ID especificado."
          }
        }
      }
    },
    "/api/tags/{id}/receitas": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Associa uma receita existente a uma tag específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da tag que será associada à receita.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "receitaId",
            "in": "query",
            "description": "ID da receita que será associada à tag.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Receita associada à tag com sucesso."
          },
          "404": {
            "description": "A tag ou a receita especificada não foi encontrada."
          },
          "400": {
            "description": "Dados inválidos ou inconsistentes foram enviados na requisição."
          }
        }
      }
    },
    "/api/tags/{id}/despesas": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Associa uma despesa existente a uma tag específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da tag que será associada à despesa.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "despesaId",
            "in": "query",
            "description": "ID da despesa que será associada à tag.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Despesa associada à tag com sucesso."
          },
          "404": {
            "description": "A tag ou a despesa especificada não foi encontrada."
          },
          "400": {
            "description": "Dados inválidos ou inconsistentes foram enviados na requisição."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Categoria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Despesa": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "data": {
            "type": "string",
            "format": "date-time"
          },
          "categoriaId": {
            "type": "string",
            "format": "uuid"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Economia": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "data": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Receita": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "data": {
            "type": "string",
            "format": "date-time"
          },
          "categoriaId": {
            "type": "string",
            "format": "uuid"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "receitas": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "despesas": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}